load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/freefair/cluster-api-provider-hcloud/cmd/cluster-api-provider-hcloud",
    visibility = ["//visibility:private"],
    deps = [
        "//api/v1beta1:go_default_library",
        "//controllers:go_default_library",
        "//pkg/manifests:go_default_library",
        "//pkg/packer:go_default_library",
        "@com_github_spf13_cobra//:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_client_go//kubernetes/scheme:go_default_library",
        "@io_k8s_client_go//plugin/pkg/client/auth/gcp:go_default_library",
        "@io_k8s_sigs_cluster_api//api/v1beta1:go_default_library",
        "@io_k8s_sigs_cluster_api//bootstrap/kubeadm/api/v1beta1:go_default_library",
        "@io_k8s_sigs_controller_runtime//:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/controller:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/log/zap:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/manager:go_default_library",
    ],
)

go_binary(
    name = "cluster-api-provider-hcloud",
    embed = [":go_default_library"],
    pure = "on",
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "run",
    srcs = ["run.sh"],
    args = [
        "$(location :cluster-api-provider-hcloud)",
        "$(location :host_all_tar.tar)",
    ],
    data = [
        ":cluster-api-provider-hcloud",
        ":host_all_tar.tar",
    ],
)

sh_binary(
    name = "deploy",
    srcs = ["deploy.sh"],
    args = [
        "$(location //hack:kubectl_host_bin)",
        "$(location //config:kustomize.tar)",
        "$(location :image.tar)",
    ],
    data = [
        ":image",
        ":image.tar",
        "//config:kustomize.tar",
        "//hack:kubectl_host_bin",
    ],
)

load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

pkg_tar(
    name = "target_bin_tar",
    srcs = [
        "@kubectl_linux_amd64_bin//file",
        "@packer_linux_amd64_bin//:bin",
    ],
    mode = "0o755",
    package_dir = "usr/local/bin",
)

pkg_tar(
    name = "host_bin_tar",
    srcs = [
        "//hack:kubectl_host_bin",
        "//hack:packer_host_bin",
    ],
    mode = "0o755",
    package_dir = "usr/local/bin",
)

pkg_tar(
    name = "host_all_tar",
    deps = [
        ":host_bin_tar",
        "//manifests",
        "//packer/centos-7_k8s-universal:packer",
        "//packer/centos-8_k8s-v1.19.0:packer",
        "//packer/centos-8_k8s-v1.19.0-privnet:packer",
        "//packer/centos-8_k8s-v1.19.3:packer",
        "//packer/centos-8_k8s-v1.21.2:packer",
    ],
)

load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_layer")

container_layer(
    name = "target_bin_layer",
    tars = [
        "//manifests",
        "//packer/centos-7_k8s-universal:packer",
        "//packer/centos-8_k8s-v1.19.0:packer",
        "//packer/centos-8_k8s-v1.19.3:packer",
        "//packer/centos-8_k8s-v1.21.2:packer",
        "//packer/centos-8_k8s-v1.19.0-privnet:packer",
    ],
)

container_layer(
    name = "config_layer",
    tars = [
        ":target_bin_tar",
    ],
)

container_image(
    name = "base_image",
    base = "@static_base//image",
    layers = [
        ":config_layer",
        ":target_bin_layer",
    ],
    user = "nobody",
)

load("@io_bazel_rules_docker//go:image.bzl", "go_image")

go_image(
    name = "image",
    args = [
        "--verbose",
        "--manifests-config-path",
        "/manifests-config/config-extvar.jsonnet",
    ],
    base = ":base_image",
    binary = ":cluster-api-provider-hcloud",
    entrypoint = [],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
